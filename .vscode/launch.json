{
  // Use IntelliSense to learn about possible attributes.
  // Hover to view descriptions of existing attributes.
  // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
  "version": "0.2.0",
  "configurations": [
    {
      "type": "node",
      "request": "launch",
      "name": "Binary Gap",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/1-iterations/binaryGap2.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Array Roration",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/2-arrays/rotation-alt.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Odd Occurences in Array",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/2-arrays/oddOccurrencesInArray-alt.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Perm Missing Elem",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/time-complexity/permMissingElem.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Tape Equilibrium",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/3-time-complexity/tapeEquilibrium-alt.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Counting Elements",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/counting-elements/frogRiverOne.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Max counters",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/counting-elements/maxCounter.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Missing Integer",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/counting-elements/missingInt.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Perm Check",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/counting-elements/permCheck.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Count Divs",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/prefix-sums/countDiv.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Genomic Range Query",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/5-prefix-sums/genomicRangeQuery-alt.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Min average two slice",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/prefix-sums/minAvgTwoSlice.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Min average two slice FAST",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/prefix-sums/minAvgTwoSliceFast.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Passing cars",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/5-prefix-sums/passingCars-alt.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Distinct cars",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/sorting/distinct.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Distinct cars",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/sorting/maxProductOfThree.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Number of distinct interesctions",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/sorting/numberOfDiscIntersections.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Number of distinct interesctions",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/sorting/triangle.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Brackets",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/stack-queues/brackets.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Fish",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/7-stack-queues/fish-alt.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Nesting",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/stack-queues/nesting.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Stone Wall",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/7-stack-queues/stoneWall-alt.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Dominator",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/leader/dominator.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Equileader",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/leader/equileader.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Max double slice sum",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/max-slice/maxDoubleSliceSum.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Max profit",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/max-slice/maxProfit.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Max slice sum",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/max-slice/maxSliceSum.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Count Factors",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/prime-composite/countFactors.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Flags",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/prime-composite/flags.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Min Perimeter Rectangle",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/prime-composite/minPerimeterRectangle.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Peaks",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/prime-composite/peaks.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Count not divisisble",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/sieve/countNonDivisible.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Count semi-primes",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/sieve/countSemiprimes.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Chocolates by number",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/euclidean/chocolatesByNumbers.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Common prime divisors",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/euclidean/commonPrimeDivisors.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Fib frog",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/13-fibonacci/fibFrog-alt2.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Ladder",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/fibonacci/ladder.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Min max division",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/binary-search/minMaxDivision.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Nailing Planks",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/binary-search/nailingPlanks.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Count distinct slices",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/caterpillar/countDistinctSlices.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Count triangles",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/caterpillar/countTriangles.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Min abs sum of two",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/caterpillar/minAbsSumOfTwo.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Max non overlapping segments",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/greedy/maxNonoverlappingSegments.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Tie ropes",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/greedy/tieRopes.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Min abs sum",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/dynamic-programming/minAbsSum.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Number solitaire",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "program": "${workspaceFolder}/dynamic-programming/numberSolitaire.js"
    }
  ]
}
